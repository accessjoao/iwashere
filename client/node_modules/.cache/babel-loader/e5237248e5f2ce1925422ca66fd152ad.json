{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaof\\\\OneDrive\\\\Desktop\\\\Codworks Senior\\\\Solo\\\\frontend\\\\iwashere\\\\client\\\\src\\\\Components\\\\Mapbox\\\\LogEntryForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./mapbox.css\";\nimport { useForm } from \"react-hook-form\";\nimport { createLogEntry } from \"../../FrontApi\";\nimport { storage } from \"../Mapbox/firebase\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { ref, uploadString, uploadBytes, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogEntryFrom = _ref => {\n  _s();\n\n  let {\n    location,\n    onClose\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [file, setFile] = useState(null);\n  const [send, setSend] = useState(null);\n  const [url, setUrl] = useState(null);\n  const [image, setImage] = useState(null);\n\n  const onSubmit = async data => {\n    try {\n      setLoading(true);\n      data.latitude = location.latitude;\n      data.longitude = location.longitude;\n      await createLogEntry(data);\n      onClose();\n    } catch (error) {\n      console.error(error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  const onChangeHandler = event => {\n    const url = event.target.files[0];\n    console.log(event.target.files);\n\n    if (url) {\n      setFile(URL.createObjectURL(url));\n      setUrl(url);\n    } else {\n      setFile(null);\n    }\n  };\n\n  const handleUpload = e => {\n    e.preventDefault();\n    const name = url.name.replace(\".\", \"\");\n    console.log(url);\n    const storageRef = ref(storage, `images/${name}`);\n    const upBytes = uploadBytesResumable(storageRef, url);\n    upBytes.on(\"state_changed\", snapshot => {}, error => {\n      console.log(error);\n    }, () => {\n      getDownloadURL(upBytes.snapshot.ref).then(url => {\n        setSend(url);\n        console.log(url, file, send);\n      });\n    });\n  };\n\n  useEffect(() => {// if (send) {\n    //   fetch(\"http://localhost:3001/photos\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       photo: send,\n    //       tripId: postId,\n    //     }),\n    //   })\n    //     .then((resp) => resp.json())\n    //     .then((result) => {\n    //       dispatch(update_data());\n    //       navigate(-1);\n    //     })\n    //     .catch((e) => console.log(e));\n    // }\n  }, [send]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"entry-form\",\n    children: [error ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"title\", {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"comments\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"comments\"),\n      rows: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"image\",\n      children: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      id: \"file-input\",\n      type: \"file\",\n      accept: \"image/png, image/jpeg\",\n      files: file,\n      onChange: onChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"visitDate\",\n      children: \"Visit Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"visitDate\"),\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading,\n      children: loading ? \"Loading...\" : \"I Was Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogEntryFrom, \"x/1HhmjObxA1HQIjb+K+2d2tYMQ=\", false, function () {\n  return [useForm];\n});\n\n_c = LogEntryFrom;\nexport default LogEntryFrom;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogEntryFrom\");","map":{"version":3,"sources":["C:/Users/joaof/OneDrive/Desktop/Codworks Senior/Solo/frontend/iwashere/client/src/Components/Mapbox/LogEntryForm.jsx"],"names":["React","useState","useEffect","useForm","createLogEntry","storage","ref","uploadString","uploadBytes","getDownloadURL","uploadBytesResumable","LogEntryFrom","location","onClose","loading","setLoading","error","setError","register","handleSubmit","file","setFile","send","setSend","url","setUrl","image","setImage","onSubmit","data","latitude","longitude","console","message","onChangeHandler","event","target","files","log","URL","createObjectURL","handleUpload","e","preventDefault","name","replace","storageRef","upBytes","on","snapshot","then","required","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAO,qCAAP;AACA,SACEC,GADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,oBALF,QAMO,kBANP;;;AAQA,MAAMC,YAAY,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA0B;AAC9C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEiB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BhB,OAAO,EAA1C;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACuB,GAAD,EAAMC,MAAN,IAAgBxB,QAAQ,CAAC,IAAD,CAA9B;AAEA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAM2B,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAI;AACFd,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAc,MAAAA,IAAI,CAACC,QAAL,GAAgBlB,QAAQ,CAACkB,QAAzB;AACAD,MAAAA,IAAI,CAACE,SAAL,GAAiBnB,QAAQ,CAACmB,SAA1B;AACA,YAAM3B,cAAc,CAACyB,IAAD,CAApB;AAEAhB,MAAAA,OAAO;AACR,KAPD,CAOE,OAAOG,KAAP,EAAc;AACdgB,MAAAA,OAAO,CAAChB,KAAR,CAAcA,KAAd;AACAC,MAAAA,QAAQ,CAACD,KAAK,CAACiB,OAAP,CAAR;AACAlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAbD;;AAeA,QAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjC,UAAMX,GAAG,GAAGW,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAZ;AACAL,IAAAA,OAAO,CAACM,GAAR,CAAYH,KAAK,CAACC,MAAN,CAAaC,KAAzB;;AACA,QAAIb,GAAJ,EAAS;AACPH,MAAAA,OAAO,CAACkB,GAAG,CAACC,eAAJ,CAAoBhB,GAApB,CAAD,CAAP;AACAC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAHD,MAGO;AACLH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GATD;;AAWA,QAAMoB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAGpB,GAAG,CAACoB,IAAJ,CAASC,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAb;AACAb,IAAAA,OAAO,CAACM,GAAR,CAAYd,GAAZ;AACA,UAAMsB,UAAU,GAAGxC,GAAG,CAACD,OAAD,EAAW,UAASuC,IAAK,EAAzB,CAAtB;AACA,UAAMG,OAAO,GAAGrC,oBAAoB,CAACoC,UAAD,EAAatB,GAAb,CAApC;AACAuB,IAAAA,OAAO,CAACC,EAAR,CACE,eADF,EAEGC,QAAD,IAAc,CAAE,CAFlB,EAGGjC,KAAD,IAAW;AACTgB,MAAAA,OAAO,CAACM,GAAR,CAAYtB,KAAZ;AACD,KALH,EAME,MAAM;AACJP,MAAAA,cAAc,CAACsC,OAAO,CAACE,QAAR,CAAiB3C,GAAlB,CAAd,CAAqC4C,IAArC,CAA2C1B,GAAD,IAAS;AACjDD,QAAAA,OAAO,CAACC,GAAD,CAAP;AACAQ,QAAAA,OAAO,CAACM,GAAR,CAAYd,GAAZ,EAAiBJ,IAAjB,EAAuBE,IAAvB;AACD,OAHD;AAID,KAXH;AAaD,GAnBD;;AAqBApB,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAnBQ,EAmBN,CAACoB,IAAD,CAnBM,CAAT;AAqBA,sBACE;AAAM,IAAA,QAAQ,EAAEH,YAAY,CAACS,QAAD,CAA5B;AAAwC,IAAA,SAAS,EAAC,YAAlD;AAAA,eACGZ,KAAK,gBAAG;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAwC,IADhD,eAEE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,sBAAWE,QAAQ,CAAC,OAAD,EAAU;AAAEiC,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,yBAAcjC,QAAQ,CAAC,UAAD,CAAtB;AAAoC,MAAA,IAAI,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AACE,MAAA,KAAK,EAAE;AAAEkC,QAAAA,OAAO,EAAE;AAAX,OADT;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,MAAM,EAAC,uBAJT;AAKE,MAAA,KAAK,EAAEhC,IALT;AAME,MAAA,QAAQ,EAAEc;AANZ;AAAA;AAAA;AAAA;AAAA,YARF,eAgBE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE,sBAAWhB,QAAQ,CAAC,WAAD,CAAnB;AAAkC,MAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAjBF,eAmBE;AAAQ,MAAA,QAAQ,EAAEJ,OAAlB;AAAA,gBACGA,OAAO,GAAG,YAAH,GAAkB;AAD5B;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAtGD;;GAAMH,Y;UAG+BR,O;;;KAH/BQ,Y;AAwGN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./mapbox.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createLogEntry } from \"../../FrontApi\";\r\nimport { storage } from \"../Mapbox/firebase\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport {\r\n  ref,\r\n  uploadString,\r\n  uploadBytes,\r\n  getDownloadURL,\r\n  uploadBytesResumable,\r\n} from \"firebase/storage\";\r\n\r\nconst LogEntryFrom = ({ location, onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { register, handleSubmit } = useForm();\r\n  const [file, setFile] = useState(null);\r\n  const [send, setSend] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  const [image, setImage] = useState(null);\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      data.latitude = location.latitude;\r\n      data.longitude = location.longitude;\r\n      await createLogEntry(data);\r\n\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onChangeHandler = (event) => {\r\n    const url = event.target.files[0];\r\n    console.log(event.target.files);\r\n    if (url) {\r\n      setFile(URL.createObjectURL(url));\r\n      setUrl(url);\r\n    } else {\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  const handleUpload = (e) => {\r\n    e.preventDefault();\r\n    const name = url.name.replace(\".\", \"\");\r\n    console.log(url);\r\n    const storageRef = ref(storage, `images/${name}`);\r\n    const upBytes = uploadBytesResumable(storageRef, url);\r\n    upBytes.on(\r\n      \"state_changed\",\r\n      (snapshot) => {},\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        getDownloadURL(upBytes.snapshot.ref).then((url) => {\r\n          setSend(url);\r\n          console.log(url, file, send);\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (send) {\r\n    //   fetch(\"http://localhost:3001/photos\", {\r\n    //     method: \"POST\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //       photo: send,\r\n    //       tripId: postId,\r\n    //     }),\r\n    //   })\r\n    //     .then((resp) => resp.json())\r\n    //     .then((result) => {\r\n    //       dispatch(update_data());\r\n    //       navigate(-1);\r\n    //     })\r\n    //     .catch((e) => console.log(e));\r\n    // }\r\n  }, [send]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"entry-form\">\r\n      {error ? <h3 className=\"error\">{error}</h3> : null}\r\n      <label htmlFor=\"title\">Title</label>\r\n      <input {...register(\"title\", { required: true })} />\r\n      <label htmlFor=\"comments\">Comments</label>\r\n      <textarea {...register(\"comments\")} rows={3}></textarea>\r\n\r\n      <label htmlFor=\"image\">Image</label>\r\n      <input\r\n        style={{ display: \"none\" }}\r\n        id=\"file-input\"\r\n        type=\"file\"\r\n        accept=\"image/png, image/jpeg\"\r\n        files={file}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <label htmlFor=\"visitDate\">Visit Date</label>\r\n      <input {...register(\"visitDate\")} type=\"date\" />\r\n\r\n      <button disabled={loading}>\r\n        {loading ? \"Loading...\" : \"I Was Here\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LogEntryFrom;\r\n"]},"metadata":{},"sourceType":"module"}