{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaof\\\\OneDrive\\\\Desktop\\\\Codworks Senior\\\\Solo\\\\frontend\\\\iwashere\\\\client\\\\src\\\\Components\\\\MapboxDark\\\\mapboxDark.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { listLogEntries } from \"../../FrontApi\";\nimport \"./mapboxDark.css\";\nimport FlagDark from \"./flagDark\";\nimport LogEntryFrom from \"./LogEntryForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MapBoxDark = () => {\n  _s();\n\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [entryId, setEntryId] = useState(\"\");\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 0,\n    longitude: 0,\n    zoom: 1.5\n  });\n\n  const getEntries = async () => {\n    const logEntries = await listLogEntries();\n    setLogEntries(logEntries);\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []); //get latitude and longitude where they click\n\n  const showAddMarkerPopup = event => {\n    const [longitude, latitude] = event.lngLat;\n    setAddEntryLocation({\n      latitude,\n      longitude\n    });\n  };\n\n  const deleteHandler = async () => {\n    try {\n      console.log(entryId);\n      const response = await fetch(\"http://localhost:1337/api/logs\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: entryId\n        })\n      });\n      const data = response.json();\n\n      if (!data) {\n        console.log(data);\n        getEntries();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n      mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n      onViewportChange: nextViewport => setViewport(nextViewport) //mapStyle=\"mapbox://styles/accessjoao/ckvwr2unz0sgb14oa0tsnxngk\"\n      //mapStyle=\"mapbox://styles/accessjoao/ckw1rtodp0f3m14pgpn9mc39o\"\n      //mapStyle=\"mapbox://styles/accessjoao/ckw1rzpb404r914sfw3v162fd\"\n      ,\n      mapStyle: \"mapbox://styles/accessjoao/ckw27rn7d0lhf15jyf9w9iry3\",\n      onDblClick: showAddMarkerPopup,\n      children: [logEntries.map(entry => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          latitude: entry.latitude,\n          longitude: entry.longitude //offsetLeft={-5}\n          // offsetTop={-20}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setShowPopup({\n                //...showPopup,\n                [entry._id]: true\n              });\n              setEntryId(entry._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(FlagDark, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), showPopup[entry._id] ? /*#__PURE__*/_jsxDEV(Popup, {\n          latitude: entry.latitude,\n          longitude: entry.longitude,\n          closeButton: true,\n          closeOnClick: false,\n          dynamicPosition: true,\n          onClose: () => setShowPopup({}),\n          anchor: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: entry.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Visit Date: \", new Date(entry.visitDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), entry.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"entry.image\",\n            alt: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteHandler,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this) : null]\n      }, entry._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), addEntryLocation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          latitude: addEntryLocation.latitude,\n          longitude: addEntryLocation.longitude //offsetLeft={-5}\n          // offsetTop={-20}\n          ,\n          children: /*#__PURE__*/_jsxDEV(FlagDark, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popup, {\n          latitude: addEntryLocation.latitude,\n          longitude: addEntryLocation.longitude,\n          closeButton: true,\n          closeOnClick: false,\n          dynamicPosition: true,\n          onClose: () => setAddEntryLocation(null),\n          anchor: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            children: /*#__PURE__*/_jsxDEV(LogEntryFrom, {\n              onClose: () => {\n                setAddEntryLocation(null);\n                getEntries();\n              },\n              location: addEntryLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteHandler,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapBoxDark, \"5YO11jDJ6ODKXOuEEQtQfYxcvwU=\");\n\n_c = MapBoxDark;\nexport default MapBoxDark;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapBoxDark\");","map":{"version":3,"sources":["C:/Users/joaof/OneDrive/Desktop/Codworks Senior/Solo/frontend/iwashere/client/src/Components/MapboxDark/mapboxDark.jsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","listLogEntries","FlagDark","LogEntryFrom","MapBoxDark","logEntries","setLogEntries","showPopup","setShowPopup","addEntryLocation","setAddEntryLocation","entryId","setEntryId","viewport","setViewport","width","height","latitude","longitude","zoom","getEntries","showAddMarkerPopup","event","lngLat","deleteHandler","console","log","response","fetch","method","headers","body","JSON","stringify","id","data","json","e","process","env","REACT_APP_MAPBOX_TOKEN","nextViewport","map","entry","_id","title","comments","Date","visitDate","toLocaleDateString","image"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport { listLogEntries } from \"../../FrontApi\";\r\nimport \"./mapboxDark.css\";\r\nimport FlagDark from \"./flagDark\";\r\nimport LogEntryFrom from \"./LogEntryForm\";\r\n\r\nconst MapBoxDark = () => {\r\n  const [logEntries, setLogEntries] = useState([]);\r\n  const [showPopup, setShowPopup] = useState({});\r\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\r\n  const [entryId, setEntryId] = useState(\"\");\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    latitude: 0,\r\n    longitude: 0,\r\n    zoom: 1.5,\r\n  });\r\n\r\n  const getEntries = async () => {\r\n    const logEntries = await listLogEntries();\r\n    setLogEntries(logEntries);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEntries();\r\n  }, []);\r\n  //get latitude and longitude where they click\r\n  const showAddMarkerPopup = (event) => {\r\n    const [longitude, latitude] = event.lngLat;\r\n    setAddEntryLocation({\r\n      latitude,\r\n      longitude,\r\n    });\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    try {\r\n      console.log(entryId);\r\n      const response = await fetch(\"http://localhost:1337/api/logs\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id: entryId }),\r\n      });\r\n      const data = response.json();\r\n      if (!data) {\r\n        console.log(data);\r\n        getEntries();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n        //mapStyle=\"mapbox://styles/accessjoao/ckvwr2unz0sgb14oa0tsnxngk\"\r\n        //mapStyle=\"mapbox://styles/accessjoao/ckw1rtodp0f3m14pgpn9mc39o\"\r\n        //mapStyle=\"mapbox://styles/accessjoao/ckw1rzpb404r914sfw3v162fd\"\r\n        mapStyle=\"mapbox://styles/accessjoao/ckw27rn7d0lhf15jyf9w9iry3\"\r\n        onDblClick={showAddMarkerPopup}\r\n      >\r\n        {logEntries.map((entry) => (\r\n          <React.Fragment key={entry._id}>\r\n            <Marker\r\n              latitude={entry.latitude}\r\n              longitude={entry.longitude}\r\n\r\n              //offsetLeft={-5}\r\n              // offsetTop={-20}\r\n            >\r\n              <div\r\n                onClick={() => {\r\n                  setShowPopup({\r\n                    //...showPopup,\r\n                    [entry._id]: true,\r\n                  });\r\n                  setEntryId(entry._id);\r\n                }}\r\n              >\r\n                <FlagDark></FlagDark>\r\n              </div>\r\n            </Marker>\r\n            {showPopup[entry._id] ? (\r\n              <Popup\r\n                latitude={entry.latitude}\r\n                longitude={entry.longitude}\r\n                closeButton={true}\r\n                closeOnClick={false}\r\n                dynamicPosition={true}\r\n                onClose={() => setShowPopup({})}\r\n                anchor=\"top\"\r\n              >\r\n                <div className=\"popup\" />\r\n                <h3>{entry.title}</h3>\r\n                <p>{entry.comments}</p>\r\n                <small>\r\n                  Visit Date: {new Date(entry.visitDate).toLocaleDateString()}\r\n                </small>\r\n                {entry.image ? (\r\n                  <img src={\"entry.image\"} alt={entry.title} />\r\n                ) : null}\r\n                <button onClick={deleteHandler}>Delete</button>\r\n              </Popup>\r\n            ) : null}\r\n          </React.Fragment>\r\n        ))}\r\n        {addEntryLocation ? (\r\n          <>\r\n            <Marker\r\n              latitude={addEntryLocation.latitude}\r\n              longitude={addEntryLocation.longitude}\r\n\r\n              //offsetLeft={-5}\r\n              // offsetTop={-20}\r\n            >\r\n              <FlagDark></FlagDark>\r\n            </Marker>\r\n            <Popup\r\n              latitude={addEntryLocation.latitude}\r\n              longitude={addEntryLocation.longitude}\r\n              closeButton={true}\r\n              closeOnClick={false}\r\n              dynamicPosition={true}\r\n              onClose={() => setAddEntryLocation(null)}\r\n              anchor=\"top\"\r\n            >\r\n              <div className=\"popup\">\r\n                <LogEntryFrom\r\n                  onClose={() => {\r\n                    setAddEntryLocation(null);\r\n                    getEntries();\r\n                  }}\r\n                  location={addEntryLocation}\r\n                />\r\n              </div>\r\n              <button onClick={deleteHandler}>Delete</button>\r\n            </Popup>\r\n          </>\r\n        ) : null}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapBoxDark;\r\n"]},"metadata":{},"sourceType":"module"}