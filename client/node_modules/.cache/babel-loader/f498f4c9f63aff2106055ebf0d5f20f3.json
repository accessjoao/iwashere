{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaof\\\\OneDrive\\\\Desktop\\\\Codworks Senior\\\\Solo\\\\frontend\\\\iwashere\\\\client\\\\src\\\\Components\\\\Mapbox\\\\mapbox.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { listLogEntries } from \"../../FrontApi\";\nimport \"./mapbox.css\";\nimport Flag from \"./flag\";\nimport LogEntryFrom from \"./LogEntryForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MapBox = () => {\n  _s();\n\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 0,\n    longitude: 0,\n    zoom: 1.3\n  });\n  useEffect(() => {\n    (async () => {\n      const logEntries = await listLogEntries();\n      setLogEntries(logEntries);\n    })();\n  }, []); //get latitude and longitude where they click\n\n  const showAddMarkerPopup = event => {\n    const [longitude, latitude] = event.lngLat;\n    setAddEntryLocation({\n      latitude,\n      longitude\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n      mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n      onViewportChange: nextViewport => setViewport(nextViewport),\n      mapStyle: \"mapbox://styles/accessjoao/ckvwr2unz0sgb14oa0tsnxngk\",\n      onDblClick: showAddMarkerPopup,\n      children: [logEntries.map(entry => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          latitude: entry.latitude,\n          longitude: entry.longitude //offsetLeft={-5}\n          // offsetTop={-20}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setShowPopup({\n              //...showPopup,\n              [entry._id]: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(Flag, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, entry._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), showPopup[entry._id] ? /*#__PURE__*/_jsxDEV(Popup, {\n          latitude: entry.latitude,\n          longitude: entry.longitude,\n          closeButton: true,\n          closeOnClick: false,\n          dynamicPosition: true,\n          onClose: () => setShowPopup({}),\n          anchor: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: entry.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Visit date: \", new Date(entry.visitDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true)), addEntryLocation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          latitude: addEntryLocation.latitude,\n          longitude: addEntryLocation.longitude //offsetLeft={-5}\n          // offsetTop={-20}\n          ,\n          children: /*#__PURE__*/_jsxDEV(Flag, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popup, {\n          latitude: addEntryLocation.latitude,\n          longitude: addEntryLocation.longitude,\n          closeButton: true,\n          closeOnClick: false,\n          dynamicPosition: true,\n          onClose: () => setAddEntryLocation(null),\n          anchor: \"top\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            children: /*#__PURE__*/_jsxDEV(LogEntryFrom, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapBox, \"XBgJ3mwGM6/x03hv5Z4ijoWnViA=\");\n\n_c = MapBox;\nexport default MapBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapBox\");","map":{"version":3,"sources":["C:/Users/joaof/OneDrive/Desktop/Codworks Senior/Solo/frontend/iwashere/client/src/Components/Mapbox/mapbox.jsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","listLogEntries","Flag","LogEntryFrom","MapBox","logEntries","setLogEntries","showPopup","setShowPopup","addEntryLocation","setAddEntryLocation","viewport","setViewport","width","height","latitude","longitude","zoom","showAddMarkerPopup","event","lngLat","process","env","REACT_APP_MAPBOX_TOKEN","nextViewport","map","entry","_id","title","comments","Date","visitDate","toLocaleDateString"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport { listLogEntries } from \"../../FrontApi\";\r\nimport \"./mapbox.css\";\r\nimport Flag from \"./flag\";\r\nimport LogEntryFrom from \"./LogEntryForm\";\r\n\r\nconst MapBox = () => {\r\n  const [logEntries, setLogEntries] = useState([]);\r\n  const [showPopup, setShowPopup] = useState({});\r\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    latitude: 0,\r\n    longitude: 0,\r\n    zoom: 1.3,\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const logEntries = await listLogEntries();\r\n      setLogEntries(logEntries);\r\n    })();\r\n  }, []);\r\n  //get latitude and longitude where they click\r\n  const showAddMarkerPopup = (event) => {\r\n    const [longitude, latitude] = event.lngLat;\r\n    setAddEntryLocation({\r\n      latitude,\r\n      longitude,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n        mapStyle=\"mapbox://styles/accessjoao/ckvwr2unz0sgb14oa0tsnxngk\"\r\n        onDblClick={showAddMarkerPopup}\r\n      >\r\n        {logEntries.map((entry) => (\r\n          <>\r\n            <Marker\r\n              key={entry._id}\r\n              latitude={entry.latitude}\r\n              longitude={entry.longitude}\r\n\r\n              //offsetLeft={-5}\r\n              // offsetTop={-20}\r\n            >\r\n              <div\r\n                onClick={() =>\r\n                  setShowPopup({\r\n                    //...showPopup,\r\n                    [entry._id]: true,\r\n                  })\r\n                }\r\n              >\r\n                <Flag></Flag>\r\n              </div>\r\n            </Marker>\r\n            {showPopup[entry._id] ? (\r\n              <Popup\r\n                latitude={entry.latitude}\r\n                longitude={entry.longitude}\r\n                closeButton={true}\r\n                closeOnClick={false}\r\n                dynamicPosition={true}\r\n                onClose={() => setShowPopup({})}\r\n                anchor=\"top\"\r\n              >\r\n                <div className=\"popup\" />\r\n                <h3>{entry.title}</h3>\r\n                <p>{entry.comments}</p>\r\n                <small>\r\n                  Visit date: {new Date(entry.visitDate).toLocaleDateString()}\r\n                </small>\r\n              </Popup>\r\n            ) : null}\r\n          </>\r\n        ))}\r\n        {addEntryLocation ? (\r\n          <>\r\n            <Marker\r\n              latitude={addEntryLocation.latitude}\r\n              longitude={addEntryLocation.longitude}\r\n\r\n              //offsetLeft={-5}\r\n              // offsetTop={-20}\r\n            >\r\n              <Flag></Flag>\r\n            </Marker>\r\n            <Popup\r\n              latitude={addEntryLocation.latitude}\r\n              longitude={addEntryLocation.longitude}\r\n              closeButton={true}\r\n              closeOnClick={false}\r\n              dynamicPosition={true}\r\n              onClose={() => setAddEntryLocation(null)}\r\n              anchor=\"top\"\r\n            >\r\n              <div className=\"popup\">\r\n                <LogEntryFrom />\r\n              </div>\r\n            </Popup>\r\n          </>\r\n        ) : null}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapBox;\r\n"]},"metadata":{},"sourceType":"module"}